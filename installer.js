// @bun
import K from"os";var M="\x1B[32m",Q="\x1B[0m",H="./node_modules/yajsb/lib",D=K.platform().startsWith("win")?"move":"mv";async function w(h,x){try{console.log(x);let q=Bun.spawn(h.split(" "),{stdout:"pipe",stderr:"pipe"}),z=q.stdout?await new Response(q.stdout).text():"",A=q.stderr?await new Response(q.stderr).text():"";if(await q.exited!==0)console.error(`\u274C Command failed: ${h}`),console.error(`stdout: ${z}`),console.error(`stderr: ${A}`),process.exit(1)}catch(q){console.error("\uD83D\uDEA8 Erreur critique:",q),process.exit(1)}}function S(h){let x=process.stdin;return process.stdout.write(h),new Promise((z)=>{x.resume(),x.once("data",(A)=>{z(A.toString().trim())})})}async function T(){try{await w("bun init","\uD83D\uDCE6 Project instantiation..."),await w("bun add github:fullstackbeaver/yajsb","\uD83D\uDCE6 Installing yasb..."),console.log("\uD83D\uDCE6 Ajout des scripts...");let h=await Bun.file("./package.json").json();if(h.scripts={...h.scripts,start:"bun --watch run index.ts --verbose",updateComponentsList:"bun run scripts.ts types",updateComponentsScssList:"bun run scripts.ts scss"},await Bun.write("./package.json",JSON.stringify(h,null,2)),await w(`${D} ${H}/scripts.ts ./scripts.ts`,"\uD83D\uDCE6 Adding scripts"),await w(`${D} ${H}/templates ./templates`,"\uD83D\uDCE6 Adding templates..."),console.log(`${M}Do you need a demo site?${Q}`),console.log("(y) yes"),console.log("(n) no"),(await S("Select an option (default is yes):")==="n"?2:1)===1)await w("bun add github:fullstackbeaver/yajsb-site-demo -D","\uD83D\uDCE6 Installation of the sample site..."),await w(`${D} ./node_modules/yajsb-site-demo ./site`,"\uD83D\uDCE6 Moving sample site into project...");else await w("mkdir ./site","\uD83D\uDCE6 Creating site folder...");await w("rm ./installer.js","\uD83D\uDCE6 Removing installer..."),process.exit(0)}catch(h){console.error("\uD83D\uDEA8 Fatal error:",h),process.exit(1)}}T();
