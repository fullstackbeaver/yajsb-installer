// @bun
import Q from"os";var S="\x1B[32m",T="\x1B[0m",M="./node_modules/yajsb/lib",K=Q.platform().startsWith("win")?"move":"mv";async function A(x,z){try{console.log(z);let q=Bun.spawn(x.split(" "),{stdout:"pipe",stderr:"pipe"}),D=q.stdout?await new Response(q.stdout).text():"",H=q.stderr?await new Response(q.stderr).text():"";if(await q.exited!==0)console.error(`\u274C Command failed: ${x}`),console.error(`stdout: ${D}`),console.error(`stderr: ${H}`),process.exit(1)}catch(q){console.error("\uD83D\uDEA8 Erreur critique:",q),process.exit(1)}}function U(x){let z=process.stdin;return process.stdout.write(x),new Promise((D)=>{z.resume(),z.once("data",(H)=>{D(H.toString().trim())})})}async function V(){try{await A("bun init","\uD83D\uDCE6 Project instantiation..."),await A("bun add github:fullstackbeaver/yajsb","\uD83D\uDCE6 Installing yasb..."),console.log("\uD83D\uDCE6 Ajout des scripts...");let x=await Bun.file("./package.json").json();x.scripts={...x.scripts,start:"bun --watch run index.ts --verbose",updateComponentsList:"bun run scripts.ts types",updateComponentsScssList:"bun run scripts.ts scss"},await Bun.write("./package.json",JSON.stringify(x,null,2)),await A(`${K} ${M}/scripts.ts ./scripts.ts`,"\uD83D\uDCE6 Adding scripts"),await A(`${K} ${M}/templates ./templates`,"\uD83D\uDCE6 Adding templates..."),console.log(`${S}Do you need a demo site?${T}`),console.log("(1) yes"),console.log("(2) no");let z=await U("Select an option (default is 1): "),q=z===""?1:parseInt(z);if(q>2||q<1)q=1;if(q===1)await A("bun add github:fullstackbeaver/yajsb-site-demo -D","\uD83D\uDCE6 Installation of the sample site..."),await A(`${K} ./node_modules/yajsb-site-demo ./site`,"\uD83D\uDCE6 Moving sample site into project...");else await A("mkdir ./site","\uD83D\uDCE6 Creating site folder...");process.exit(0)}catch(x){console.error("\uD83D\uDEA8 Fatal error:",x),process.exit(1)}}V();
